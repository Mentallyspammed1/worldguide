name: Ruff Linting and Auto-Fix

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.py'
      - '.ruff.toml'
      - 'pyproject.toml'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.py'
      - '.ruff.toml'
      - 'pyproject.toml'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

permissions:
  contents: write
  pull-requests: write

jobs:
  ruff-auto-fix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Repository Contents
        run: |
          echo "Repository contents:"
          ls -la
          find . -type f
          if [ ! -d .git ]; then
            echo "::error::Repository not properly checked out. Please ensure the checkout step is correct."
            exit 1
          fi

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.8

      - name: Create Default Ruff Configuration
        run: |
          if [ ! -f pyproject.toml ]; then
            echo '[tool.ruff]
            line-length = 88
            target-version = "py311"
            select = ["E", "F", "W", "I", "UP", "B", "A", "C4", "PT", "SIM", "TID", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "NPY", "RUF"]
            ignore = []
            fixable = ["ALL"]
            unfixable = []
            exclude = [
                ".git",
                ".venv",
                "venv",
                "__pycache__",
                "build",
                "dist",
                "*.egg-info",
                ".pytest_cache",
                ".mypy_cache",
                ".ruff_cache",
            ]

            [tool.ruff.format]
            quote-style = "double"
            indent-style = "space"
            skip-magic-trailing-comma = false
            line-ending = "lf"

            [tool.ruff.lint]
            ignore-init-module-imports = true

            [tool.ruff.lint.pydocstyle]
            convention = "google"

            [tool.ruff.lint.isort]
            known-first-party = []
            known-third-party = []
            force-single-line = false
            combine-as-imports = true
            split-on-trailing-comma = true' > pyproject.toml
            echo "Created pyproject.toml with default Ruff configuration."
          else
            echo "pyproject.toml already exists, skipping creation."
          fi
          cat pyproject.toml || echo "No pyproject.toml found after creation."

      - name: Run Ruff Linting and Auto-Fix
        id: ruff
        run: |
          ruff --version
          ruff format . || true
          ruff check . --fix --exit-non-zero-on-fix --output-format=json --output-file=ruff_check.json || true
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          if [ -s ruff_check.json ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Display Ruff Results
        if: always()
        run: |
          echo "Ruff Linting Output:"
          cat ruff_check.json || echo "No Ruff output generated."

      - name: Upload Ruff Report as Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ruff-report
          path: ruff_check.json
          retention-days: 7

      - name: Create Pull Request with Fixes
        if: steps.ruff.outputs.changes_detected == 'true'
        id: create_pr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: Apply Ruff linting and formatting fixes"
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
          branch: ruff-fixes/${{ github.run_id }}-${{ github.run_attempt }}
          delete-branch: true
          title: 'chore: Auto Ruff linting and formatting fixes'
          body: |
            This pull request applies automated linting and formatting fixes using Ruff.

            ### Changes
            - Ran `ruff format` for consistent code style
            - Ran `ruff check --fix` to address linting issues
            - Created `pyproject.toml` if it was missing

            **Triggering Commit**: ${{ github.sha }}
            **Workflow Run**: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            Please review the changes carefully. The Ruff report is available as an artifact.

          labels: |
            autofix
            ruff
            automated-pr
          assignees: ${{ github.actor }}
          reviewers: ${{ github.actor }}

      - name: Summarize Workflow Outcome
        if: always()
        run: |
          echo "Ruff Step Outcome: ${{ steps.ruff.outcome }}"
          echo "Changes Detected: ${{ steps.ruff.outputs.changes_detected }}"
          echo "Pull Request URL: ${{ steps.create_pr.outputs.pull-request-url || 'No PR created' }}"
          echo "PR Number: ${{ steps.create_pr.outputs.pull-request-number || 'N/A' }}"

          if [[ "${{ steps.ruff.outcome }}" == "failure" && "${{ steps.ruff.outputs.changes_detected }}" != "true" ]]; then
            echo "::error::Ruff failed, likely due to unfixable errors. Check the ruff_check.json artifact for details."
            exit 1
          elif [[ "${{ steps.create_pr.outputs.pull-request-operation }}" == "none" || "${{ steps.ruff.outputs.changes_detected }}" != "true" ]]; then
            echo "No changes detected by Ruff. No pull request created."
          else
            echo " Ascending PR #${{ steps.create_pr.outputs.pull-request-number }}."
          fi
