name: Code Enhancement Workflow
on:
  workflow_dispatch:
    inputs:
      api-key:
        description: 'Gemini API Key (leave blank to use repository secret)'
        required: false
      max-api-calls:
        description: 'Maximum API calls per minute (1-60)'
        required: false
        default: '59'
      file-pattern:
        description: 'File patterns to enhance (e.g., "*.py", "src/*.py,*.js")'
        required: false
        default: '**/*.py'
      dry-run:
        description: 'Run in dry-run mode (list files without enhancing)'
        required: false
        default: 'false'

jobs:
  enhance-code:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: List Repository Files
        run: |
          echo "Repository contents:"
          find . -type f

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai colorama

      - name: Validate Inputs
        run: |
          MAX_CALLS="${{ github.event.inputs.max-api-calls }}"
          if ! [[ "$MAX_CALLS" =~ ^[0-9]+$ ]] || [ "$MAX_CALLS" -lt 1 ] || [ "$MAX_CALLS" -gt 60 ]; then
            echo "Error: max-api-calls must be a number between 1 and 60"
            exit 1
          fi
          if [ -z "${{ github.event.inputs.api-key || secrets.GEMINI_API_KEY }}" ]; then
            echo "Error: API key not provided and GEMINI_API_KEY secret not set"
            exit 1
          fi
          DRY_RUN="${{ github.event.inputs.dry-run }}"
          if [[ "$DRY_RUN" != "true" && "$DRY_RUN" != "false" ]]; then
            echo "Error: dry-run must be 'true' or 'false'"
            exit 1
          fi

      - name: Ensure Enhancement Script
        run: |
          if [ ! -f process_files.py ]; then
            echo "Error: process_files.py not found in repository root"
            exit 1
          fi
          chmod +x process_files.py
          echo "process_files.py contents:"
          head -n 20 process_files.py

      - name: Create Output Directory
        run: |
          mkdir -p enhanced

      - name: Debug Environment
        run: |
          echo "Working directory: $(pwd)"
          echo "FILE_PATTERN: ${{ github.event.inputs.file-pattern }}"
          echo "DRY_RUN: ${{ github.event.inputs.dry-run }}"
          echo "MAX_API_CALLS: ${{ github.event.inputs.max-api-calls }}"

      - name: Enhance Code
        env:
          GOOGLE_API_KEY: ${{ github.event.inputs.api-key || secrets.GEMINI_API_KEY }}
          MAX_API_CALLS: ${{ github.event.inputs.max-api-calls }}
          FILE_PATTERN: ${{ github.event.inputs.file-pattern }}
          DRY_RUN: ${{ github.event.inputs.dry-run }}
        run: |
          ./process_files.py "$(pwd)" "$FILE_PATTERN" | tee enhancement_log.txt
          EXIT_CODE=${PIPESTATUS[0]}
          if [ $EXIT_CODE -ne 0 ]; then
            cat enhancement_log.txt
            exit $EXIT_CODE
          fi

      - name: Upload Enhancement Log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: enhancement-log
          path: enhancement_log.txt
          retention-days: 7

      - name: Upload Enhanced Files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: enhanced-files
          path: enhanced/
          retention-days: 7
