name: Pyrmethus Enhancement Workflow

on:
  workflow_dispatch:
    inputs:
      base_directory:
        description: 'Base directory to search for Python files'
        required: true
        default: '.'
      file_pattern:
        description: 'Glob pattern for Python files (e.g., "**/*.py")'
        required: true
        default: '**/*.py'
      google_api_key:
        description: 'Google API Key (leave blank to use repository secret)'
        required: false
      max_api_calls:
        description: 'Maximum API calls per minute (1-60)'
        required: false
        default: '59'
      commit_message:
        description: 'Custom commit message for the enhancement changes'
        required: false
        default: 'Apply automated code enhancements'

jobs:
  enhance_python_code:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-generativeai aiohttp
          pip list >> enhancement_log.txt

      - name: List Matched Python Files
        run: |
          echo "Matched files for pattern ${{ inputs.file_pattern }} in directory ${{ inputs.base_directory }}:" | tee matched_files.txt
          find "${{ inputs.base_directory }}" -type f -path "${{ inputs.file_pattern }}" | sort >> matched_files.txt
          if ! grep -q "[^[:space:]]" matched_files.txt; then
            echo "Warning: No Python files matched the pattern ${{ inputs.file_pattern }} in directory ${{ inputs.base_directory }}" | tee -a matched_files.txt
          else
            echo "Found $(grep -c "[^[:space:]]" matched_files.txt) Python files" >> matched_files.txt
          fi

      - name: Split Files into Batches
        run: |
          # Split the matched files into batches of 10
          split -l 10 matched_files.txt batch_
          ls batch_* > batch_list.txt

      - name: Run Code Enhancement Script in Batches
        env:
          GOOGLE_API_KEY: ${{ inputs.google_api_key || secrets.GOOGLE_API_KEY }}
          MAX_API_CALLS: ${{ inputs.max_api_calls }}
        run: |
          echo "Processing files in batches..." >> enhancement_log.txt
          while read batch_file; do
            echo "Processing batch: $batch_file" >> enhancement_log.txt
            while read file; do
              ./xfix_files.py "$file" >> enhancement_log.txt 2>&1 || {
                echo "Error: Enhancement script failed for $file. See enhancement_log.txt for details." | tee -a enhancement_log.txt
                exit 1
              }
            done < "$batch_file"
          done < batch_list.txt
          echo "Completed processing all batches" >> enhancement_log.txt

      - name: Validate Enhanced Files
        run: |
          echo "Validating enhanced Python files for syntax errors:" >> enhancement_log.txt
          find "${{ inputs.base_directory }}" -type f -path "${{ inputs.file_pattern }}" -exec python -m py_compile {} \; >> enhancement_log.txt 2>&1 || {
            echo "Error: Syntax errors detected in enhanced Python files" | tee -a enhancement_log.txt
            exit 1
          }
          echo "No syntax errors detected in enhanced files" >> enhancement_log.txt

      - name: Debug Git Status
        run: |
          git status | tee -a enhancement_log.txt
          echo "Staged changes:" | tee -a enhancement_log.txt
          git diff --cached || echo "No staged changes" | tee -a enhancement_log.txt

      - name: Check for Changes
        id: git_status
        run: |
          git add .
          if ! git diff --cached --quiet; then
            echo "Changes detected" | tee -a enhancement_log.txt
            echo "changes_made=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected" | tee -a enhancement_log.txt
            echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.git_status.outputs.changes_made == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create New Branch and Commit Changes
        if: steps.git_status.outputs.changes_made == 'true'
        id: commit-changes
        run: |
          BRANCH_NAME="enhance-$(date +%Y%m%d-%H%M%S)-${{ github.run_id }}"
          echo "Creating branch: $BRANCH_NAME" | tee -a enhancement_log.txt
          git checkout -b "$BRANCH_NAME" || {
            echo "Error: Failed to create branch $BRANCH_NAME" | tee -a enhancement_log.txt
            exit 1
          }
          git commit -m "${{ inputs.commit_message }}" || {
            echo "Error: Failed to commit changes" | tee -a enhancement_log.txt
            git status
            exit 1
          }
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Push Changes
        if: steps.git_status.outputs.changes_made == 'true'
        run: |
          BRANCH_NAME="${{ steps.commit-changes.outputs.branch_name }}"
          echo "Pushing branch $BRANCH_NAME to origin" | tee -a enhancement_log.txt
          git push origin "$BRANCH_NAME" --force-with-lease || {
            echo "Error: Failed to push branch $BRANCH_NAME" | tee -a enhancement_log.txt
            git status
            git remote -v
            exit 1
          }

      - name: Create Pull Request
        if: steps.git_status.outputs.changes_made == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.commit-changes.outputs.branch_name }}
          base: ${{ github.ref_name }}
          title: "Automated Code Enhancements"
          body: |
            This PR contains automated code enhancements for Python (.py) files using the Gemini API.

            **Details:**
            - Base directory: ${{ inputs.base_directory }}
            - File pattern: ${{ inputs.file_pattern }}
            - API calls per minute: ${{ inputs.max_api_calls }}
            - Commit message: ${{ inputs.commit_message }}

            **Validation:**
            - Syntax-checked all enhanced Python files.
            - Found $(grep -c "[^[:space:]]" matched_files.txt) files matching the pattern.

            Please review the changes and the attached `enhancement_log.txt` and `matched_files.txt` artifacts.
          labels: |
            enhancement
            automated
          assignees: ${{ github.actor }}
          commit-message: "${{ inputs.commit_message }}"
          delete-branch: true

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: enhancement-artifacts
          path: |
            matched_files.txt
            enhancement_log.txt
          retention-days: 7
